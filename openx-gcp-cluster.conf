include file("cluster.properties")
cloudera-manager {
    enableEnterpriseTrial=true
    instance {
        bootDiskSizeGb="60"
        dataDiskCount="2"
        dataDiskSizeGb="375"
        image=${IMAGE_URL}
        instanceNamePrefix=${PREFIX}
        networkName=default
        normalizeInstance=true
        rackId="/default"
        sshHostKeyRetrievalType=NONE
        tags {
            owner=toby
	    role=cm
        }
        type=n1-standard-4
        usePreemptibleInstances="false"
        zone=us-central1-a
    }
    javaInstallationStrategy=AUTO
    password=admin
    repository=${CM_REPO_URL}
    username=admin
}
cluster {
    administrationSettings {
        autoRepairCooldownPeriodInSeconds=1800
        autoRepairEnabled=false
    }
    configs {
        HDFS {
            core_site_safety_valve: """
	        <property>
                    <name>google.cloud.auth.service.account.json.keyfile</name>
                    <value>/opt/cloudera/gcp-sa.json</value>
                    <description>The JSON key file of the service account used for GCS access when google.cloud.auth.service.account.enable is true.
		    </description>
		</property>
	"""
        }
	OOZIE {}
        HIVE {"hive_aux_jars_path_dir"="/opt/cloudera/parcels/GCPSTORAGECONNECTOR/lib/hadoop/lib/"}
        HUE {}
        YARN {}
        ZOOKEEPER {}
    }
    gateway {
        configs {}
        count=1
        instance: ${common-instance-properties} {
            bootDiskSizeGb="60"
            dataDiskCount="2"
            dataDiskSizeGb="375"
	    image=${IMAGE_URL}
            instanceNamePrefix=${PREFIX}
            networkName=default
            normalizeInstance=true
            rackId="/default"
            sshHostKeyRetrievalType=NONE
            tags {
		role=gateway
            }
            type=n1-standard-4
            usePreemptibleInstances="false"
            zone=us-central1-a
        }
        minCount=1
        roles {
            HDFS=[
                GATEWAY
            ]
            HIVE=[
                GATEWAY
            ]
            YARN=[
                GATEWAY
            ]
        }
    }
    instancePostCreateScripts=[]
    masters {
        configs {}
        count=1
        instance: ${common-instance-properties} {
            bootDiskSizeGb="60"
            dataDiskCount="2"
            dataDiskSizeGb="375"
	    image=${IMAGE_URL}
            instanceNamePrefix=${PREFIX}
            networkName=default
            normalizeInstance=true
            rackId="/default"
            sshHostKeyRetrievalType=NONE
            tags {
                owner=toby
		role=master
            }
            type=n1-standard-4
            usePreemptibleInstances="false"
            zone=us-central1-a
        }
        minCount=1
        roles {
            HDFS=[
                NAMENODE,
                SECONDARYNAMENODE,
                BALANCER
            ]
            HIVE=[
                HIVEMETASTORE,
                HIVESERVER2
            ]
            HUE=[
                "HUE_SERVER"
            ]
            OOZIE=[
                "OOZIE_SERVER"
	    ]
            YARN=[
                RESOURCEMANAGER,
                JOBHISTORY
            ]
            ZOOKEEPER=[
                SERVER
            ]
        }
    }
    parcelRepositories=[
        ${CDH_PARCEL_URL}
    ]
    postCreateScripts=[]
    preTerminateScripts=[]
    products {
        CDH=${CDH_VERSION}
    }
    redeployClientConfigsOnUpdate=false
    restartOnUpdate=false
    services=[
	OOZIE,
        HUE,
        YARN,
        HIVE,
        HDFS,
        ZOOKEEPER
    ]
    workers {
        configs {}
        count=3
        instance: ${common-instance-properties} {
            bootDiskSizeGb="60"
            dataDiskCount="2"
            dataDiskSizeGb="375"
	    image=${IMAGE_URL}
            instanceNamePrefix=${PREFIX}
            networkName=default
            normalizeInstance=true
            rackId="/default"
            sshHostKeyRetrievalType=NONE
            tags {
		role=worker
            }
            type=n1-standard-4
            usePreemptibleInstances="false"
            zone=us-central1-a
        }

        minCount=3
        roles {
            HDFS=[
                DATANODE
            ]
            YARN=[
                NODEMANAGER
            ]
        }
    }
}
common-instance-properties: {   
			    bootstrapScriptsPaths=["scripts/install-gcs-connector.sh"]
			    tags: { owner=toby }
}			    

deploymentName=ox
environmentName=ox-external
name=${PREFIX}
provider {
	 # Including the key below is dangerous - easy to check it into github and so publish to the world.
	 # Better option is to create envar GOOGLE_APPLICATION_CREDENTIALS pointing to the key file locally, and then start
	 # director in that environment, omitting the key below. 


#      jsonKey: """{
#   "private_key_id": "DUMMY",
#   "private_key": "-----BEGIN PRIVATE KEY-----\DUMMY\n-----END PRIVATE KEY-----\n",
#   "client_email": "DUMMY@developer.gserviceaccount.com",
#   "client_id": "DUMMY",
#   "type": "service_account"
# }"""
    projectId="gcp-se"
    region="us-central1"
    type=google
}
ssh {
    privateKey=${SSH_KEY_PATH}
    username=${SSH_USERNAME}
}
